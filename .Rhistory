path1 = "/Users/ben/desktop/tmp1/"
heatmap.net.new.nolg(tmp1$Smean ,lim=c(0,1),path = path1,community = sim_list[[1]]$community,
color = gray((100:10)/100), filename = paste0("conn_conn_noise",noise0,"dens") )
noise0 = "05"
sim_list = readRDS(paste0("/Users/ben/desktop/data_nlss/sim/simICA_list_3215_",noise0,"_node50_new.rds") )
res_conn_thr = readRDS( paste0("/Users/ben/desktop/data_nlss/sim/resICA_conn_3215_",noise0,"_node50_new.rds" ) )
th0 = "095"
res_sum = list()
for(s0 in c(1,2,3)){
res_sum[[s0]] = readRDS( paste0("/Users/ben/desktop/data_nlss/sim/resICA_sum_sprs", s0 ,"_3215_",noise0,"_th",th0,"_node50_new.rds") )
}
tmp = eval_nlss_f1_tmp(res_sum,sim_list)
tmp1 = eval_conn_f1_tmp(res_conn_thr, sim_list,th0 = tmp$density)
print_meansure(tmp1)
round(tmp1$f1_mean,3)
round(tmp1$f1_sd,3)
m0 = round(tmp1$ppv_mean,3)
sd0 = round(tmp1$ppv_sd,3)
m0 = round(tmp1$npv_mean,3)
sd0 = round(tmp1$npv_sd,3)
m0 = round(tmp1$sen_mean,3)
sd0 = round(tmp1$sen_sd,3)
m0 = round(tmp1$spc_mean,3)
sd0 = round(tmp1$spc_sd,3)
paste0(m0[1],"(", sd0[1] ,") &",m0[2], "(", sd0[2] ,") &",m0[3], "(", sd0[3] ,")")
path1 = "/Users/ben/desktop/tmp1/"
heatmap.net.new.nolg(tmp1$Smean ,lim=c(0,1),path = path1,community = sim_list[[1]]$community,
color = gray((100:10)/100), filename = paste0("conn_conn_noise",noise0,"dens") )
noise0 = "08"
sim_list = readRDS(paste0("/Users/ben/desktop/data_nlss/sim/simICA_list_3215_",noise0,"_node50_new.rds") )
res_conn_thr = readRDS( paste0("/Users/ben/desktop/data_nlss/sim/resICA_conn_3215_",noise0,"_node50_new.rds" ) )
th0 = "095"
res_sum = list()
for(s0 in c(1,2,3)){
res_sum[[s0]] = readRDS( paste0("/Users/ben/desktop/data_nlss/sim/resICA_sum_sprs", s0 ,"_3215_",noise0,"_th",th0,"_node50_new.rds") )
}
tmp = eval_nlss_f1_tmp(res_sum,sim_list)
tmp1 = eval_conn_f1_tmp(res_conn_thr, sim_list,th0 = tmp$density)
print_meansure(tmp1)
round(tmp1$f1_mean,3)
round(tmp1$f1_sd,3)
m0 = round(tmp1$ppv_mean,3)
sd0 = round(tmp1$ppv_sd,3)
m0 = round(tmp1$npv_mean,3)
sd0 = round(tmp1$npv_sd,3)
m0 = round(tmp1$sen_mean,3)
sd0 = round(tmp1$sen_sd,3)
m0 = round(tmp1$spc_mean,3)
sd0 = round(tmp1$spc_sd,3)
paste0(m0[1],"(", sd0[1] ,") &",m0[2], "(", sd0[2] ,") &",m0[3], "(", sd0[3] ,")")
path1 = "/Users/ben/desktop/tmp1/"
heatmap.net.new.nolg(tmp1$Smean ,lim=c(0,1),path = path1,community = sim_list[[1]]$community,
color = gray((100:10)/100), filename = paste0("conn_conn_noise",noise0,"dens") )
noise0 = "1"
sim_list = readRDS(paste0("/Users/ben/desktop/data_nlss/sim/sim2_list_3215_",noise0,"_node50_new.rds") )
res_conn_thr = readRDS( paste0("/Users/ben/desktop/data_nlss/sim/res_conn_3215_",noise0,"_node50_new.rds" ) )
th0 = "095"
res_sum = list()
for(s0 in c(1,2,3)){
res_sum[[s0]] = readRDS( paste0("/Users/ben/desktop/data_nlss/sim/res2_sum_sprs", s0 ,"_3215_",noise0,"_th",th0,"_node50_new.rds") )
}
tmp1 = eval_conn_f1_tmp(res_conn_thr, sim_list,th0 = tmp$density)
print_meansure(tmp1)
m0 = round(tmp1$f1_mean,3)
sd0 = round(tmp1$f1_sd,3)
m0 = round(tmp1$sen_mean,3)
sd0 = round(tmp1$sen_sd,3)
m0 = round(tmp1$spc_mean,3)
sd0 = round(tmp1$spc_sd,3)
m0 = round(tmp1$npv_mean,3)
sd0 = round(tmp1$npv_sd,3)
m0 = round(tmp1$ppv_mean,3)
sd0 = round(tmp1$ppv_sd,3)
paste0(m0[1],"(", sd0[1] ,") &",m0[2], "(", sd0[2] ,") &",m0[3], "(", sd0[3] ,")")
path1 = "/Users/ben/desktop/tmp1/"
heatmap.net.new.nolg(tmp1$Smean ,lim=c(0,1),path = path1,community = sim_list[[1]]$community,color = gray((100:10)/100), filename = paste0("nlss_conn_noise",noise0,"dens") )
noise0 = "2"
sim_list = readRDS(paste0("/Users/ben/desktop/data_nlss/sim/sim2_list_3215_",noise0,"_node50_new.rds") )
res_conn_thr = readRDS( paste0("/Users/ben/desktop/data_nlss/sim/res_conn_3215_",noise0,"_node50_new.rds" ) )
th0 = "095"
res_sum = list()
for(s0 in c(1,2,3)){
res_sum[[s0]] = readRDS( paste0("/Users/ben/desktop/data_nlss/sim/res2_sum_sprs", s0 ,"_3215_",noise0,"_th",th0,"_node50_new.rds") )
}
tmp1 = eval_conn_f1_tmp(res_conn_thr, sim_list,th0 = tmp$density)
print_meansure(tmp1)
m0 = round(tmp1$f1_mean,3)
sd0 = round(tmp1$f1_sd,3)
m0 = round(tmp1$sen_mean,3)
sd0 = round(tmp1$sen_sd,3)
m0 = round(tmp1$spc_mean,3)
sd0 = round(tmp1$spc_sd,3)
m0 = round(tmp1$npv_mean,3)
sd0 = round(tmp1$npv_sd,3)
m0 = round(tmp1$ppv_mean,3)
sd0 = round(tmp1$ppv_sd,3)
paste0(m0[1],"(", sd0[1] ,") &",m0[2], "(", sd0[2] ,") &",m0[3], "(", sd0[3] ,")")
path1 = "/Users/ben/desktop/tmp1/"
heatmap.net.new.nolg(tmp1$Smean ,lim=c(0,1),path = path1,community = sim_list[[1]]$community,color = gray((100:10)/100), filename = paste0("nlss_conn_noise",noise0,"dens") )
###############
noise0 = "3"
sim_list = readRDS(paste0("/Users/ben/desktop/data_nlss/sim/sim2_list_3215_",noise0,"_node50_new.rds") )
res_conn_thr = readRDS( paste0("/Users/ben/desktop/data_nlss/sim/res_conn_3215_",noise0,"_node50_new.rds" ) )
th0 = "095"
res_sum = list()
for(s0 in c(1,2,3)){
res_sum[[s0]] = readRDS( paste0("/Users/ben/desktop/data_nlss/sim/res2_sum_sprs", s0 ,"_3215_",noise0,"_th",th0,"_node50_new.rds") )
}
tmp1 = eval_conn_f1_tmp(res_conn_thr, sim_list,th0 = tmp$density)
print_meansure(tmp1)
m0 = round(tmp1$f1_mean,3)
sd0 = round(tmp1$f1_sd,3)
m0 = round(tmp1$sen_mean,3)
sd0 = round(tmp1$sen_sd,3)
m0 = round(tmp1$spc_mean,3)
sd0 = round(tmp1$spc_sd,3)
m0 = round(tmp1$npv_mean,3)
sd0 = round(tmp1$npv_sd,3)
m0 = round(tmp1$ppv_mean,3)
sd0 = round(tmp1$ppv_sd,3)
paste0(m0[1],"(", sd0[1] ,") &",m0[2], "(", sd0[2] ,") &",m0[3], "(", sd0[3] ,")")
path1 = "/Users/ben/desktop/tmp1/"
heatmap.net.new.nolg(tmp1$Smean ,lim=c(0,1),path = path1,community = sim_list[[1]]$community,color = gray((100:10)/100), filename = paste0("nlss_conn_noise",noise0,"dens") )
5*25
45*3
5*25/3
155/24
?car::crPlots
example9_1 = read.csv("/Users/ben/desktop/stat/example/chap09/example9_1.csv", fileEncoding = "GBK")
model = lm(销售收入~广告支出, data = example9_1)
x0 = example9_1$广告支出
x0
pre_model = predict(model)
pre_model
?predict
pre_model = predict(model, newdata = x0)
pre_model = predict(model, newdata = data.frame(x0) )
pre_model = predict(model, newdata = data.frame(广告支出=x0) )
pre_model1 = predict(model)
sum( pre_model == pre_model1)
sum( pre_model != pre_model1)
con_int = predict(model, interval = "confidence", level = 0.95)
con_int
con_int1 = predict(model, data.frame(广告支出=x0), interval = "confidence", level = 0.95)
con_int = predict(model,  interval = "confidence", level = 0.95)
sum(con_int1!=con_int)
dim(con_int1 )
head(con_int1)
con_int[1,]
con_int1[1,]
con_int1[con_int1!=con_int]
con_int[con_int1!=con_int]
sum( abs(con_int1 - con_int) )
pre = fitted(model)
sum( pre != pre_model )
pre
pre_model
pre
pre - pre_model
res = residuals(model)
res
example9_1$销售收入 - pre
head(example9_1$销售收入 - pre)
head(res)
10508.9/113.3
1347.1/113.3
182+546+38+470+76+104+22+238+54+360*4+300+16*40+260
182+546+38+470+76+104+22+238+54+360*4+300+16*40+260+189+101+118
a = c(rep(1,7), rep(0,53) )
tmp = 0
count = 0
for(i in 1:1000){
tmp = sample(a,7)
if(sum(tmp)>0){
count = count + 1
}
}
count
a = c(rep(1,7), rep(0,53) )
tmp = 0
count = 0
for(i in 1:1000){
tmp = sample(a,8)
if(sum(tmp)>0){
count = count + 1
}
}
count
a = c(rep(1,7), rep(0,53) )
tmp = 0
count = 0
for(i in 1:10000){
tmp = sample(a,8)
if(sum(tmp)>0){
count = count + 1
}
}
count
a = c(rep(1,8), rep(0,53) )
tmp = 0
count = 0
for(i in 1:10000){
tmp = sample(a,8)
if(sum(tmp)>0){
count = count + 1
}
}
count
a = c(rep(1,8), rep(0,53) )
tmp = 0
count = 0
for(i in 1:10000){
tmp = sample(a,8)
if(sum(tmp)>0){
count = count + 1
}
}
count
a = c(rep(1,8), rep(0,53) )
tmp = 0
count = 0
for(i in 1:10000){
tmp = sample(a,8)
if(sum(tmp)>0){
count = count + 1
}
}
count
a = c(rep(1,8), rep(0,53) )
tmp = 0
count = 0
for(i in 1:10000){
tmp = sample(a,8)
if(sum(tmp)>0){
count = count + 1
}
}
count
a = c(rep(1,8), rep(0,53) )
tmp = 0
count = 0
for(i in 1:10000){
tmp = sample(a,8)
if(sum(tmp)>0){
count = count + 1
}
}
count
a = c(rep(1,8), rep(0,53) )
tmp = 0
count = 0
for(i in 1:10000){
tmp = sample(a,8)
if(sum(tmp)>0){
count = count + 1
}
}
count
a = c(rep(1,8), rep(0,53) )
tmp = 0
count = 0
for(i in 1:10000){
tmp = sample(a,8)
if(sum(tmp)>0){
count = count + 1
}
}
count
a = c(rep(1,8), rep(0,53) )
tmp = 0
count = 0
for(i in 1:10000){
tmp = sample(a,8)
if(sum(tmp)>0){
count = count + 1
}
}
count
a = c(rep(1,8), rep(0,53) )
tmp = 0
count = 0
for(i in 1:10000){
tmp = sample(a,8)
if(sum(tmp)>0){
count = count + 1
}
}
count
a = c(rep(1,8), rep(0,53) )
tmp = 0
count = 0
for(i in 1:100000){
tmp = sample(a,8)
if(sum(tmp)>0){
count = count + 1
}
}
count/100000
a = c(rep(1,8), rep(0,53) )
tmp = 0
count = 0
for(i in 1:100000){
tmp = sample(a,8)
if(sum(tmp)>0){
count = count + 1
}
}
count/100000
a = c(rep(1,8), rep(0,53) )
tmp = 0
count = 0
for(i in 1:100000){
tmp = sample(a,8)
if(sum(tmp)>0){
count = count + 1
}
}
count/100000
a = c(rep(1,8), rep(0,53) )
tmp = 0
count = 0
for(i in 1:100000){
tmp = sample(a,8)
if(sum(tmp)>0){
count = count + 1
}
}
count/100000
a = c(rep(1,8), rep(0,53) )
tmp = 0
count = 0
for(i in 1:100000){
tmp = sample(a,8)
if(sum(tmp)>0){
count = count + 1
}
}
count/100000
a = c(rep(1,8), rep(0,53) )
tmp = 0
count = 0
for(i in 1:100000){
tmp = sample(a,8)
if(sum(tmp)>0){
count = count + 1
}
}
count/100000
a = c(rep(1,8), rep(0,53) )
tmp = 0
count = 0
for(i in 1:100000){
tmp = sample(a,8)
if(sum(tmp)>0){
count = count + 1
}
}
count/100000
a = c(rep(1,8), rep(0,53) )
tmp = 0
count = 0
for(i in 1:100000){
tmp = sample(a,8)
if(sum(tmp)>0){
count = count + 1
}
}
count/100000
a = c(rep(1,8), rep(0,52) )
tmp = 0
count = 0
for(i in 1:100000){
tmp = sample(a,8)
if(sum(tmp)>0){
count = count + 1
}
}
count/100000
a = c(rep(1,8), rep(0,52) )
tmp = 0
count = 0
for(i in 1:100000){
tmp = sample(a,8)
if(sum(tmp)>0){
count = count + 1
}
}
count/100000
a = c(rep(1,8), rep(0,52) )
tmp = 0
count = 0
for(i in 1:100000){
tmp = sample(a,8)
if(sum(tmp)>0){
count = count + 1
}
}
count/100000
a = c(rep(1,8), rep(0,52) )
tmp = 0
count = 0
for(i in 1:100000){
tmp = sample(a,8)
if(sum(tmp)>0){
count = count + 1
}
}
count/100000
45*5
45*3
45*3 - 25*5
############### PNC data  ###################
library(gplots)
library(nlss)
library(gtools)
library(abind)
library(DescTools)
library(Rcpp)
#################
group0 = read.csv("/Users/ben/desktop/data_nlss/roi_id_power.csv")
group = group0
order0 = c(12,11,3,8,9,6,5,10,13,7,4,1,2)
for(i in 1:13){
group$network_id[group$network_id==order0[i]] = i+ 100
}
group$network_id[group$network_id!=-1] = group$network_id[group$network_id!=-1] - 100
group_1 = group$network_id
group_2 = group_1[order(group_1)][-c(1:28)]
FC_data_raw = readRDS("/Users/ben/desktop/data_nlss/FC_data_raw_247_ordered.rds")
z_score_FC = FisherZ(FC_data_raw)
p = pnorm(abs(z_score_FC),sd=1/sqrt(117),lower.tail = FALSE)*2
adjp = apply(p,1,p.adjust,method = "bonferroni")
FC = (t(adjp)<0.05) * sign(z_score_FC)
SC = readRDS("/Users/ben/desktop/data_nlss/SC_data_85_247_ordered.rds")
sub_ind = readRDS("/Users/ben/desktop/data_nlss/FCSC_sub_ind3.rds")
############brainviewer#############
group0 = read.csv("/Users/ben/desktop/data_nlss/roi_id_power.csv")
group = group0
order0 = c(12,11,3,8,9,6,5,10,13,7,4,1,2)
for(i in 1:13){
group$network_id[group$network_id==order0[i]] = i + 100
}
group$network_id[group$network_id!=-1] = group$network_id[group$network_id!=-1] - 100
group_1 = group$network_id
group_2 = group_1[order(group_1)][-c(1:28)]
group_3 = group[order(group_1),]
group_4 = group_3[-c(1:28),]
group_4$tmp = 1
group_4$tmp1 = group_4$network_id
res_sumFC = readRDS("/Users/ben/desktop/data_nlss/res_sumFC2_sprs1_allnew.rds")
res_sumFCSC = readRDS("/Users/ben/desktop/data_nlss/res_sumFCSC2_sprs2_allnew.rds")
res_FC = readRDS("/Users/ben/desktop/data_nlss/resFC2sprs1_allnew.rds")
res_FCSC = readRDS("/Users/ben/desktop/data_nlss/resFCSC2sprs2_allnew.rds")
path0 = "/home/ben/data/tmp/tmp1/fig/"
path0 = "/home/ben/data/tmp/tmp1/fig/"
tmp = apply( res_sumFC$A,2,mean)[-9]
A = res_sumFC$A[,-9]
A1 = A[,order(tmp,decreasing = TRUE)]
SFC =  res_sumFC$S[order(tmp,decreasing = TRUE),]
#heatmap.net.new.nolg(SFC-2,lim=c(-1,1),path = path0,community = group_2,color = bluered(3), filename = paste0("FC") )
tmp = apply( res_sumFCSC$A,2,mean)[-9]
SFCSC =  res_sumFCSC$S[order(tmp,decreasing = TRUE),]
S_listFC = list()
S_listFCSC = list()
for(j in 1:8){
tmp1i = list()
tmp2i = list()
print(j)
for(i in 101:500){
tmp = apply( res_sumFC$A,2,mean)[-9]
SFCi = res_FC$S[order(tmp,decreasing = TRUE),,i]
tmp1i[[i-100]] =  vec_mat(SFCi[j,])
tmp = apply( res_sumFCSC$A,2,mean)[-9]
SFCSCi =  res_FCSC$S[order(tmp,decreasing = TRUE),,i]
tmp2i[[i-100]] = vec_mat(SFCSCi[j,])
#diag(tmp1i[[i-100]] ) = 0
#diag(tmp2i[[i-100]] ) = 0
}
S_listFC[[j]] =  tmp1i
S_listFCSC[[j]] = tmp2i
}
anscombe$y4
anscombe$x4
lm(anscombe$y4~ anscombe$x4)
summary( lm(anscombe$y4~ anscombe$x4) )
res =  lm(anscombe$y4~ anscombe$x4)
predict(res)
cor.test(anscombe$y4,anscombe$x4)
anscombe
plot(x4,y4,data = anscombe)
plot(anscombe$y4~anscombe$x4)
res = lm(anscombe$y4~anscombe$x4)
summary(res)
example10_1 = read.csv("/Users/ben/desktop/stat/example/chap10/example10_1.csv", fileEncoding = "GBK")
head(example10_1)
model1 = lm(y~x1+x2+x3+x4+x5, data = example10_1)
summary(model1)
confint(model1)
?confint
confint(model1, level = 0.9)
anova(model1)
example10_1 = read.csv("/Users/ben/desktop/stat/example/chap10/example10_1.csv", fileEncoding = "GBK")
library(psych)
corr.test(example10_1[,3:7], use = "complete")
?cor.test
model1 = lm(y~x1+x2+x3+x4+x5, data = example10_1)
library(car)
vif(model1)
example10_1 = read.csv("/Users/ben/desktop/stat/example/chap10/example10_1.csv", fileEncoding = "GBK")
model1 = lm(y~x1+x2+x3+x4+x5, data = example10_1)
model2 = step(model1)
?step
